{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","totalIntervals","setTotalIntervals","intervalDuration","setIntervalDuration","remainingIntervals","setRemainingIntervals","isActive","setIsActive","bringAudio","Audio","popAudio","Timer","timeLeft","setTimeLeft","useEffect","interval","setInterval","clearInterval","play","className","id","onClick","x","ReactDOM","render","document","getElementById"],"mappings":"iMAsJeA,MApJf,WACE,MADa,EAI+BC,mBAHnB,IADZ,mBAINC,EAJM,KAIUC,EAJV,OAKmCF,mBAHhB,IAFnB,mBAKNG,EALM,KAKYC,EALZ,OAMuCJ,mBAASC,GANhD,mBAMNI,EANM,KAMcC,EANd,OAOmBN,oBAAS,GAP5B,mBAONO,EAPM,KAOIC,EAPJ,KASPC,EAAa,IAAIC,MACrB,iFACIC,EAAW,IAAID,MACnB,2EAEIE,EAAQ,KAAO,MAAD,EACcZ,mBAASG,GADvB,mBACXU,EADW,KACDC,EADC,KA6ClB,OA1CAC,oBACE,KACE,IAAIC,EAAW,KASf,OAPIT,EACFS,EAAWC,aAAY,WACrBH,EAAYD,EAAW,KACtB,KACON,GAAyB,IAAbM,GACtBK,cAAcF,GAET,IAAME,cAAcF,IAE7B,CAACH,IAGwB,IAAvBR,EACGQ,EAEMA,EAAW,GACpBF,EAASQ,OAFTV,EAAWU,OAIJd,EAAqB,GAAkB,IAAbQ,IACnCP,EAAsBD,EAAqB,GAC3CI,EAAWU,QAmBX,6BACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aACb,gCAAMP,EAAN,KAAsB,MAG1B,yBAAKO,UAAU,eACb,4BAAQC,GAAG,QAAQD,UAAU,kBAAkBE,QAvBrD,WACER,EAAYX,GACZK,GAAY,KAqBR,SACQ,uBAAGY,UAAU,cAAb,MAER,4BAAQC,GAAG,QAAQD,UAAU,kBAAkBE,QArBrD,WACEd,GAAY,KAoBR,QACO,uBAAGY,UAAU,eAAb,MAEP,4BACEC,GAAG,UACHD,UAAU,kBACVE,QAvBR,WACEhB,EAAsBL,GACtBa,EAAYX,GACZK,GAAY,KAiBR,SAIQ,uBAAGY,UAAU,gBAAb,SAOhB,OACE,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,oDAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,uBAAGC,GAAG,kBAAN,eACA,wBAAIA,GAAG,iBACJhB,EAAoB,IADvB,KAEKJ,GAEL,yBAAKmB,UAAU,WACb,4BACEC,GAAG,OACHC,QAASC,IACPrB,EAAkBD,EAAiB,GACnCK,EAAsBD,EAAqB,KAG7C,uBAAGe,UAAU,eAAb,MAEF,4BACEC,GAAG,OACHC,QAASC,IACPrB,EAAkBD,EAAiB,GACnCK,EAAsBD,EAAqB,KAG7C,uBAAGe,UAAU,cAAb,QAKN,yBAAKA,UAAU,YACb,uBAAGC,GAAG,kBAAN,uBACA,wBAAIA,GAAG,iBAAiBlB,EAAxB,KACA,yBAAKiB,UAAU,WACb,4BACEC,GAAG,OACHC,QAASC,IACPnB,EAAoBD,EAAmB,KAGzC,uBAAGiB,UAAU,eAAb,MAEF,4BACEC,GAAG,OACHC,QAASC,IACPnB,EAAoBD,EAAmB,KAEzC,uBAAGiB,UAAU,cAAb,SAKR,kBAACR,EAAD,QC/HNY,IAASC,OACL,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.252cab11.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const initialIntervals = 30;\n  const initialIntervalDuration = 30;\n\n  const [totalIntervals, setTotalIntervals] = useState(initialIntervals);\n  const [intervalDuration, setIntervalDuration] = useState(initialIntervalDuration);\n  const [remainingIntervals, setRemainingIntervals] = useState(totalIntervals);\n  const [isActive, setIsActive] = useState(false);\n\n  const bringAudio = new Audio(\n    \"http://commondatastorage.googleapis.com/codeskulptor-assets/week7-brrring.m4a\");\n  const popAudio = new Audio(\n    \"http://codeskulptor-demos.commondatastorage.googleapis.com/pang/pop.mp3\");\n\n  const Timer = () => {\n    const [timeLeft, setTimeLeft] = useState(intervalDuration);\n\n    useEffect(\n      () => {\n        let interval = null;\n\n        if (isActive) {\n          interval = setInterval(function() {\n            setTimeLeft(timeLeft - 1);\n          }, 1000);\n        } else if (!isActive && timeLeft !== 0) {\n          clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n      },\n      [timeLeft]\n    );\n\n    if (remainingIntervals === 0) {\n      if (!timeLeft) {\n        bringAudio.play();\n      } else if (timeLeft < 6) {\n        popAudio.play();\n      }\n    } else if (remainingIntervals > 0 && timeLeft === 0) {\n      setRemainingIntervals(remainingIntervals - 1);\n      bringAudio.play();\n    }\n\n    function start() {\n      setTimeLeft(intervalDuration);\n      setIsActive(true);\n    }\n\n    function pauseTimer() {\n      setIsActive(false);\n    }\n\n    function restartIntervals() {\n      setRemainingIntervals(totalIntervals);\n      setTimeLeft(intervalDuration);\n      setIsActive(false);\n    }\n\n    return (\n      <div>\n        <div className=\"timer row\">\n          <div className=\"col-md-12\">\n            <h1> {timeLeft} </h1>{\" \"}\n          </div>\n        </div>\n        <div className=\"buttons row\">\n          <button id=\"start\" className=\"button col-md-2\" onClick={start}>\n            Start <i className=\"fa fa-play\"> </i>\n          </button>\n          <button id=\"pause\" className=\"button col-md-2\" onClick={pauseTimer}>\n            Stop <i className=\"fa fa-pause\"> </i>\n          </button>\n          <button\n            id=\"restart\"\n            className=\"button col-md-2\"\n            onClick={restartIntervals}>\n            Reset <i className=\"fa fa-repeat\"> </i>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row header\">\n        <div className=\"col-md-12 \">\n          <h1> Stretching Timer </h1>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-3 offset-md-3\">\n          <p id=\"intervalsTitle\"> Intervals </p>\n          <h2 id=\"intervalsLeft\">\n            {remainingIntervals}{\" \"}\n            / {totalIntervals}\n          </h2>\n          <div className=\"buttons\">\n            <button\n              id=\"plus\"\n              onClick={x => {\n                setTotalIntervals(totalIntervals - 1);\n                setRemainingIntervals(remainingIntervals - 1)\n              }}\n            >\n              <i className=\"fa fa-minus\"> </i>\n            </button>\n            <button\n              id=\"plus\"\n              onClick={x => {\n                setTotalIntervals(totalIntervals + 1)\n                setRemainingIntervals(remainingIntervals + 1)\n              }}\n            >\n              <i className=\"fa fa-plus\"> </i>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"col-md-3\">\n          <p id=\"intervalsTitle\"> Interval duration </p>\n          <h2 id=\"intervalsLeft\">{intervalDuration}s</h2>\n          <div className=\"buttons\">\n            <button\n              id=\"plus\"\n              onClick={x => {\n                setIntervalDuration(intervalDuration - 5);\n              }}\n            >\n              <i className=\"fa fa-minus\"> </i>\n            </button>\n            <button\n              id=\"plus\"\n              onClick={x => {\n                setIntervalDuration(intervalDuration + 5);\n              }}>\n              <i className=\"fa fa-plus\"> </i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n\n//https://stackoverflow.com/questions/57137094/implementing-a-countdown-timer-in-react-with-hooks\n//https://upmostly.com/tutorials/build-a-react-timer-component-using-hooks\n","//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n\n//HINT: You will need to study the classes in the styles.css file to appy styling.\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\n\nReactDOM.render(\n    <App/>, document.getElementById(\"root\")\n)\n"],"sourceRoot":""}