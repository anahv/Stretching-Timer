{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","totalIntervals","setTotalIntervals","remainingIntervals","setRemainingIntervals","bringAudio","Audio","popAudio","Timer","seconds","timeLeft","setTimeLeft","useEffect","interval","setInterval","clearInterval","play","className","id","onClick","x","ReactDOM","render","document","getElementById"],"mappings":"iMAmGeA,MAjGf,WAAgB,MAAD,EAE+BC,mBAAS,IAFxC,mBAENC,EAFM,KAEUC,EAFV,OAGuCF,mBAASC,GAHhD,mBAGNE,EAHM,KAGcC,EAHd,KAMPC,EAAa,IAAIC,MAAM,iFACvBC,EAAW,IAAID,MAAM,2EAErBE,EAAQ,EAAEC,cAAc,MAAD,EACKT,mBAASS,GADd,mBACpBC,EADoB,KACVC,EADU,KA4C3B,OApCAC,oBAAU,KACR,IAAKF,EACH,OAEF,MAAMG,EAAWC,aAAY,WAC3BH,EAAYD,EAAW,KACtB,KAEH,MAAM,IAAMK,cAAcF,IACzB,CAACH,IAEuB,IAAvBP,EACGO,EAEMA,EAAW,GACpBH,EAASS,OAFTX,EAAWW,OAIJb,EAAqB,IAAMO,IACpCN,EAAsBD,EAAqB,GAC3CQ,EAhCqB,IAiCrBN,EAAWW,QAgBL,6BACN,yBAAKC,UAAU,SACb,4BAAKP,IAEP,yBAAKO,UAAU,WACb,4BAAQC,GAAG,QAAQD,UAAU,SAASE,QAlB1C,WACER,EArCqB,MAsDnB,QAEE,uBAAGM,UAAU,gBAEf,4BAAQC,GAAG,QAAQC,QAnBvB,WACEf,EAAsB,GACtBO,EAAY,KAiBV,OAA4C,uBAAGM,UAAU,iBAEzD,4BAAQC,GAAG,UAAUC,QAjBzB,WACEf,EAAsBH,GACtBU,EA7CqB,MA4DnB,UAAuD,uBAAGM,UAAU,qBAM1E,OAAQ,yBAAKA,UAAU,aACrB,gCACE,iDAGF,wBAAIC,GAAG,iBACJf,EADH,IAEIF,GAEJ,yBAAKgB,UAAU,WACb,4BAAQC,GAAG,OAAOC,QAASC,IACvBlB,EAAkBD,EAAiB,KAErC,uBAAGgB,UAAU,iBAEf,4BAAQC,GAAG,OAAOC,QAASC,IACvBlB,EAAkBD,EAAiB,KAErC,uBAAGgB,UAAU,iBAIjB,kBAACT,EAAD,CAAOC,QAxFgB,OCY3BY,IAASC,OACL,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.3f844f23.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nfunction App() {\n\n  const [totalIntervals, setTotalIntervals] = useState(32)\n  const [remainingIntervals, setRemainingIntervals] = useState(totalIntervals)\n  const intervalDuration = 10\n\n  const bringAudio = new Audio(\"http://commondatastorage.googleapis.com/codeskulptor-assets/week7-brrring.m4a\")\n  const popAudio = new Audio(\"http://codeskulptor-demos.commondatastorage.googleapis.com/pang/pop.mp3\")\n\n  const Timer = ({seconds}) => {\n    const [timeLeft, setTimeLeft] = useState(seconds);\n    // const [isActive, setIsActive] = useState(false)\n\n    // function toggle() {\n    //   setIsActive(!isActive)\n    // }\n\n    useEffect(() => {\n      if (!timeLeft)\n        return;\n\n      const interval = setInterval(function() {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      return() => clearInterval(interval);\n    }, [timeLeft]);\n\n    if (remainingIntervals === 0) {\n      if (!timeLeft) {\n        bringAudio.play()\n      } else if (timeLeft < 6) {\n        popAudio.play()\n      }\n    } else if (remainingIntervals > 0 && !timeLeft) {\n      setRemainingIntervals(remainingIntervals - 1)\n      setTimeLeft(intervalDuration)\n      bringAudio.play();\n    }\n\n    function start() {\n      setTimeLeft(intervalDuration)\n    }\n    function pauseTimer() {\n      setRemainingIntervals(0)\n      setTimeLeft(0)\n    }\n    function restartIntervals() {\n      setRemainingIntervals(totalIntervals)\n      setTimeLeft(intervalDuration)\n      // setIsActive(false)\n    }\n\n    return (<div>\n      <div className=\"timer\">\n        <h1>{timeLeft}</h1>\n      </div>\n      <div className=\"buttons\">\n        <button id=\"start\" className=\"button\" onClick={start}>\n          Start\n          <i className=\"fa fa-play\"></i>\n        </button>\n        <button id=\"pause\" onClick={pauseTimer}>Stop<i className=\"fa fa-pause\"></i>\n        </button>\n        <button id=\"restart\" onClick={restartIntervals}>Restart<i className=\"fa fa-repeat\"></i>\n        </button>\n      </div>\n    </div>);\n  };\n\n  return (<div className=\"container\">\n    <header>\n      <h1>Stretching Timer</h1>\n    </header>\n\n    <h2 id=\"intervalsLeft\">\n      {remainingIntervals}\n      /{totalIntervals}\n    </h2>\n    <div className=\"buttons\">\n      <button id=\"plus\" onClick={x => {\n          setTotalIntervals(totalIntervals - 1);\n        }}>\n        <i className=\"fa fa-minus\"></i>\n      </button>\n      <button id=\"plus\" onClick={x => {\n          setTotalIntervals(totalIntervals + 1);\n        }}>\n        <i className=\"fa fa-plus\"></i>\n      </button>\n    </div>\n\n    <Timer seconds={intervalDuration}/>\n\n  </div>);\n}\n\nexport default App\n\n//https://stackoverflow.com/questions/57137094/implementing-a-countdown-timer-in-react-with-hooks\n//https://upmostly.com/tutorials/build-a-react-timer-component-using-hooks\n","//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n\n//HINT: You will need to study the classes in the styles.css file to appy styling.\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\n\nReactDOM.render(\n    <App/>, document.getElementById(\"root\")\n)\n"],"sourceRoot":""}